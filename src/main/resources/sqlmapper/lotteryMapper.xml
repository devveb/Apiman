<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbsft.wslapi.mapper.LotteryMapper">
    <insert id="insertWinningNumbers" parameterType="NumSet">

    </insert>

    <select id="getMaxDraw" resultType="int">
        select ifnull(max(draw),0) as draw from wslt.lotto_draw_history
    </select>

    <insert id="insertDrawHistory" parameterType="NumSet">
        INSERT INTO wslt.lotto_draw_history
        (draw,
         first,
         second,
         third,
         fourth,
         fifth,
         sixth,
         bonus,
         first_prize,
         second_prize,
         third_prize,
         fourth_prize,
         draw_date)
        VALUES     (
                #{draw},
                #{first},
                #{second},
                #{third},
                #{fourth},
                #{fifth},
                #{sixth},
                #{bonus},
                #{firstPrize},
                #{secondPrize},
                #{thirdPrize},
                #{fourthPrize},
                #{drawDate})
    </insert>

    <insert id="insertDreamResult" parameterType="DreamStory" useGeneratedKeys="true" keyProperty="idx" keyColumn="idx">
        insert into wslt.lotto_suggestions(story,snid,isShow) VALUES (#{story},#{snid},#{iss})

    </insert>

    <select id="selectDreamResultList" resultType="DreamStory" parameterType="int">

        select
          idx
        ,result
        , regd
        , <![CDATA[replace(story,'<','&lt;') as story ]]>
        , snid
        <![CDATA[
            ,CASE
            WHEN td < 60 THEN 'now'
            WHEN td >= 60 and td <=3600 THEN  concat(round(td/60),' min')
            WHEN td >= 3600 and td <=86400 THEN concat(round(td/3600),' hour')
            WHEN td >= 86400 and td <=604800 THEN concat(round(td/86400),' day')
            WHEN td >= 604800 and td <=2419200 THEN concat(round(td/604800),' week')
            WHEN td >= 2419200 THEN concat(round(td/2419200),' month')
            END as timer
            ]]>
        from (
            select
                sug.idx
                ,sug.snid
                ,num.number_set as result
                ,story
                , date_format(regd, '%Y-%m-%d %H:%i') as regd
                , TIMESTAMPDIFF(SECOND, regd, now())  as td
            from
                wslt.lotto_suggestions sug
            left outer join
                wslt.lotto_suggestion_numset num
            on sug.snid = num.idx
            where isShow = 1
            order by idx desc
                limit ${_parameter},7
            ) tmp

    </select>

    <select id="selectDreamNumber" resultType="String" parameterType="String">
        select GROUP_CONCAT(num) from (
                                          select num,sum(count) as sc from (
                                                                               SELECT
                                                                                   word,
                                                                                   num,
                                                                                   ROUND (
                                                                                               (
                                                                                                       LENGTH(#{story})
                                                                                                       - LENGTH( REPLACE ( #{story},word, "") )
                                                                                                   ) / LENGTH(word)
                                                                                       ) AS count
                                                                               FROM wslt.word_num_map_list
                                                                               group by word
                                                                           ) tmp
                                          group by num
                                          order by sc desc
                                          limit 6
                                      ) tmp2
    </select>

    <select id="getDrawHistory" resultType="NumSet" parameterType="NumSet">
        SELECT draw,
               first,
               second,
               third,
               fourth,
               fifth,
               sixth,
               bonus,
               first_prize  AS firstPrize,
               second_prize AS secondPrize,
               third_prize  AS thirdPrize,
               fourth_prize  AS fourthPrize,
               draw_date
        FROM   wslt.lotto_draw_history
        <if test="draw != 0">
            where draw = #{draw}
        </if>
        order by draw desc
    </select>

    <insert id="insertDrawSimulation" parameterType="NumSet">
        insert into wslt.lotto_draw_simmulation(nid,draw,place,sug_date,draw_date) values (#{idx},#{draw},#{place},#{sugDate},#{drawDate})
    </insert>

    <select id="seleteUnpackedSuggestionList" resultType="DreamStory">
        select
            idx
             ,result
             , regd as regDate
             , story
             , snid
        from (
                 select
                     sug.idx
                      ,sug.snid
                      ,num.number_set as result
                      ,story
                      , date_format(regd, '%Y-%m-%d %H:%i') as regd
                      , TIMESTAMPDIFF(SECOND, regd, now())  as td
                 from
                     wslt.lotto_suggestions sug
                         left outer join
                     wslt.lotto_suggestion_numset num
                     on sug.snid = num.idx

                 where sug.snid not in (select distinct nid from wslt.lotto_draw_simmulation)
                   and isShow = 1

             ) tmp
    </select>

    <insert id="insertNumberCombiTotalPrize" parameterType="NumSet">
        insert into wslt.lotto_number_combi(nid,total_prize) values(#{idx},#{totalPrize})
    </insert>

    <select id="countNumberSet" resultType="int">
        select count(*) as cnt from wslt.lotto_suggestion_numset
        where number_set = '${result}'
    </select>

    <insert id="insertNumberSet" parameterType="DreamStory">
        insert into wslt.lotto_suggestion_numset(number_set,sug_cnt) values (#{result},1)
    </insert>
    <update id="updateSuggestionCount" parameterType="DreamStory">
        update wslt.lotto_suggestion_numset
        set sug_cnt = sug_cnt+1,lst_sug_date = now()
        where number_set = '${result}'
    </update>

    <select id="getNumberSet" parameterType="DreamStory" resultType="NumSet">
        select idx,lst_sug_date as sugDate from wslt.lotto_suggestion_numset
        where number_set = '${result}'
    </select>

    <update id="updateNumberCombiTotalPrize" parameterType="NumSet">
        update wslt.lotto_suggestion_numset
        set total_prize = #{totalPrize}
        where idx = #{idx}

    </update>

    <select id="getNumberSetById" parameterType="DreamStory" resultType="NumSet">
        select
            idx
            ,number_set as numberUnit
            ,sug_cnt as sugCount
            ,total_prize as totalPrize
            ,reg_date as regDate
            ,lst_sug_date as sugDate
        from
            wslt.lotto_suggestion_numset
        where
            idx = #{snid}
    </select>

    <select id="getSimHistory" parameterType="DreamStory" resultType="DreamStory">
        select
            idx
            ,nid as snid
            ,draw
            ,place
            ,sug_date as sugDate
            ,draw_date as drawDate
            ,reg_date as regDate
        from
            wslt.lotto_draw_simmulation
        where
            nid = #{snid}
        group by nid,draw
    </select>

    <insert id="postReply" parameterType="DreamStory">
        <if test='type == "n"'>
            insert into wslt.lotto_suggestion_reply(snid,rep) values (#{idx},#{story})
        </if>
        <if test='type== "s"'>
            insert into wslt.lotto_story_reply(sid,rep) values (#{idx},#{story})
        </if>
    </insert>

    <select id="getReplyById" parameterType="DreamStory" resultType="DreamStory">
        select
            idx
             , <![CDATA[replace(rep,'<','&lt;') as story ]]>
             , regd
        <![CDATA[
             ,CASE
                  WHEN td < 60 THEN 'now'
                  WHEN td >= 60 and td <=3600 THEN  concat(round(td/60),' min')
                  WHEN td >= 3600 and td <=86400 THEN concat(round(td/3600),' hour')
                  WHEN td >= 86400 and td <=604800 THEN concat(round(td/86400),' day')
                  WHEN td >= 604800 and td <=2419200 THEN concat(round(td/604800),' week')
                  WHEN td >= 2419200 THEN concat(round(td/2419200),' month')
            END as timer
            ]]>
        from(


        select
        <if test= 'type == "n"'>
            snid as idx
        </if>
        <if test= 'type == "s"'>
            sid as idx
        </if>
        ,rep
             , date_format(reg_date, '%Y-%m-%d %H:%i') as regd
             , TIMESTAMPDIFF(SECOND, reg_date, now())  as td
        <if test='type == "n"'>
            from wslt.lotto_suggestion_reply
            where snid = #{idx}
        </if>
        <if test='type == "s"'>
            from wslt.lotto_story_reply
            where sid = #{idx}
        </if>
        and iss = 1
        order by reg_date desc
        ) tmp
    </select>

    <select id="getReplyCnt" parameterType="DreamStory" resultType="int">
        select count(*) as cnt
        <if test='type == "n"'>
            from wslt.lotto_suggestion_reply
            where snid = #{idx}
        </if>
        <if test='type == "s"'>
            from wslt.lotto_story_reply
            where sid = #{idx}
        </if>
            and iss = 1

    </select>

    <select id="getSuggestionById" parameterType="int" resultType="DreamStory">
        select idx,story,snid,result,isShow as iss,regd as regDate from lotto_suggestions
        where idx = #{_parameter}
    </select>



</mapper>
